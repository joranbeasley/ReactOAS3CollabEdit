# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.7

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: cimg/node:16.10
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      - node/install-packages:
          # If you are using yarn, change the line below from "npm" to "yarn"
          app-dir: ~/project/@joranbeasley/oas3-shared-editor-client                   
          pkg-manager: yarn
      - run:
          working_directory: ~/project/@joranbeasley/oas3-shared-editor-client
          name: Run UNIT Tests
          command: echo OK DONE
          #command: yarn e2e
      - run:
          working_directory: ~/project/@joranbeasley/oas3-shared-editor-client
          name: Run End To End(E2E) Tests
          command: echo OK DONE
      - run:
          working_directory: ~/project/@joranbeasley/oas3-shared-editor-client
          name: Build Project 
          command: |
            echo ="" > .env.production
            echo ="" >> .env.production
            cat .env.production
            python3 -c "import sys,os;print(list(os.environ['SSH_USER']+'@'+os.environ['SSH_HOST']));"
      - add_ssh_keys:
          fingerprints:
            - "17:4b:16:c7:95:4d:dc:89:e7:83:e0:9e:69:a2:b0:33"
      - run:
          working_directory: ~/project/@joranbeasley/oas3-shared-editor-client
          name: SSH Deploy 
          command: |
             ssh-keyscan -p $SSH_PORT $SSH_HOST >> ~/.ssh/known_hosts
             ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "/bin/bash pwd && /bin/bash whoami"
          #  scp $SSH_USER@$SSH_HOST ./build/  /home/$SSH_USER/ReactOAS3CollabEditor/dist
          #  ssh $SSH_USER@$SSH_HOST "bash /home/$SSH_USER/installer.sh"
          # yarn build

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample:
    jobs:
      - build-and-test
      # For running simple node tests, you could optionally use the node/test job from the orb to replicate and replace the job above in fewer lines.
      # - node/test
